<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zjl.booksalon.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.zjl.booksalon.entity.UserInfo">
    <id column="user_id" jdbcType="INTEGER" property="userId"/>
    <result column="user_email" jdbcType="VARCHAR" property="userEmail"/>
    <result column="user_password" jdbcType="VARCHAR" property="userPassword"/>
    <result column="user_imgurl" jdbcType="VARCHAR" property="userImgurl"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    <result column="article_num" jdbcType="INTEGER" property="articleNum"/>
    <result column="collect_num" jdbcType="INTEGER" property="collectNum"/>
    <result column="role_id" jdbcType="CHAR" property="roleId"/>
    <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
  </resultMap>
  <sql id="Base_Column_List">
    user_id
    , user_email, user_password, user_imgurl, create_time, update_time, article_num,
    collect_num, role_id,nick_name
  </sql>
  <select id="queryUserByEmail" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user_info
    where user_email = #{userEmail}
  </select>
  <select id="selectByUserEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user_info
    where user_email = #{userEmail,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete
    from user_info
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>

  <insert id="insertUserInfo" parameterType="com.zjl.booksalon.entity.UserInfo">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userImgurl != null">
        user_imgurl,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      update_time,
      <if test="articleNum != null">
        article_num,
      </if>
      <if test="collectNum != null">
        collect_num,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userImgurl != null">
        #{userImgurl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      now(),
      <if test="articleNum != null">
        #{articleNum,jdbcType=INTEGER},
      </if>
      <if test="collectNum != null">
        #{collectNum,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=CHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByUserEmail" parameterType="com.zjl.booksalon.entity.UserInfo">
    update user_info
    <set>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userImgurl != null">
        user_imgurl = #{userImgurl,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = now(),
      </if>
      <if test="articleNum != null">
        article_num = #{articleNum,jdbcType=INTEGER},
      </if>
      <if test="collectNum != null">
        collect_num = #{collectNum,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=CHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=CHAR},
      </if>
    </set>
    where user_email = #{userEmail,jdbcType=VARCHAR}
  </update>
</mapper>